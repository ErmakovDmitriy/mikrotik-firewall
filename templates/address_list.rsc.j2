{% if  mikrotik_firewall.remove_old_address_list == true %}
/ip firewall address-list remove [/ip firewall address-list find where dynamic=no]
{% endif %}


{% if mikrotik_firewall.address_list[0] is defined %}

# Remove not defined
/ip firewall address-list remove [/ip firewall address-list find where !(\
{% for list in mikrotik_firewall.address_list %}
{% if not loop.first %} or {% endif %}(list={{list.list}} and disabled={{list.disabled | bool | ternary('yes', 'no') }} and address={{list.address}} and comment="Ansible managed: [{{list.comment}}]") \
{% endfor %}
) and dynamic=no]


# Add all values
{% for list in mikrotik_firewall.address_list %}
:if ([/ip firewall address-list find list={{list.list}} disabled={{list.disabled | bool | ternary('yes', 'no') }} address={{list.address}} comment="Ansible managed: [{{list.comment}}]"] = "") do={
:log info "Add address: {{list.address}} to address-list: {{list.list}}..."
/ip firewall address-list add list={{list.list}} {% if list.disabled is defined %}disabled={{list.disabled | bool | ternary('yes', 'no') }} {%endif%}address={{list.address}}\
{% if list.comment is defined %}
 comment="Ansible managed: [{{list.comment}}]"
{% endif %}
}
{% endfor %}

{% endif %}
